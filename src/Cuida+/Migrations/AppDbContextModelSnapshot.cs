// <auto-generated />
using Cuida_.Models.repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cuida_.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Cuida_.Models.usuarios.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Cuida_.Models.usuarios.Clinica", b =>
                {
                    b.HasBaseType("Cuida_.Models.usuarios.Usuario");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Clinicas");
                });

            modelBuilder.Entity("Cuida_.Models.usuarios.Medico", b =>
                {
                    b.HasBaseType("Cuida_.Models.usuarios.Usuario");

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("Cuida_.Models.usuarios.Paciente", b =>
                {
                    b.HasBaseType("Cuida_.Models.usuarios.Usuario");

                    b.Property<int>("CadUnico")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Cuida_.Models.usuarios.Clinica", b =>
                {
                    b.HasOne("Cuida_.Models.usuarios.Usuario", null)
                        .WithOne()
                        .HasForeignKey("Cuida_.Models.usuarios.Clinica", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cuida_.Models.usuarios.Medico", b =>
                {
                    b.HasOne("Cuida_.Models.usuarios.Usuario", null)
                        .WithOne()
                        .HasForeignKey("Cuida_.Models.usuarios.Medico", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cuida_.Models.usuarios.Paciente", b =>
                {
                    b.HasOne("Cuida_.Models.usuarios.Usuario", null)
                        .WithOne()
                        .HasForeignKey("Cuida_.Models.usuarios.Paciente", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
